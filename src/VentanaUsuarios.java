/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.sql.*;

/**
 *
 * @author edwin
 */
public class VentanaUsuarios extends javax.swing.JFrame {
    BaseDatos bd;
    private Object txtCorreo;
    /**
     * Creates new form VentanaUsuarios
     */
    public VentanaUsuarios() {
        initComponents();
         bd=new BaseDatos();
        try {
            if (bd.conexion.isClosed()) {
                System.out.println("Nooo!!!. Se cerró");
            }
        } catch (SQLException ex) {
            Logger.getLogger(VentanaRegistrarProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        txtAgregar = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();
        txtEliminar = new javax.swing.JTextField();
        txtActualizar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnBuscar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        

    String email = txtCorreo.getText(); // Tomamos el correo para identificar al usuario a actualizar

    if (email.isEmpty()) {
        mensaje("ERROR: El campo correo está vacío.");
        return;
    }

    String nombre = txtNombre.getText();
    String tipoUsuario = txtTipoUsuario;
    String contrasena = txtContr.getText();

    if (nombre.isEmpty() || tipoUsuario.isEmpty() || contrasena.isEmpty()) {
        mensaje("ERROR: Todos los campos deben ser llenados.");
        return;
    }

    try {
        // Intentamos actualizar los datos del usuario en la base de datos
        boolean actualizado = bd.actualizarUsuario(email, nombre, tipoUsuario, contrasena);
        
        if (actualizado) {
            mensaje("Usuario actualizado exitosamente.");
            limpiarCampos(); // Limpiamos los campos después de la actualización
        } else {
            mensaje("No se pudo actualizar el usuario.");
        }
    } catch (SQLException ex) {
        mensaje("ERROR: Ocurrió un problema al actualizar el usuario.");
        Logger.getLogger(VentanaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
    }


    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
          String email = txtCorreo.getText(); // Capturar el email del empleado desde el formulario

    if (email.isEmpty()) {
        mensaje("ERROR: Campo email vacío");
        return;
    }

    try {
        // Llamar al método para eliminar al empleado
        if (bd.eliminarEmpleado(email)) {
            mensaje("Empleado eliminado exitosamente");
            limpiarCampos(); // Limpiar los campos del formulario
        } else {
            mensaje("Error al eliminar el empleado");
        }
    } catch (Exception e) {
        mensaje("ERROR: Ocurrió un problema al eliminar el empleado");
    }



    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String email = txtCorreo.getText(); // Tomamos el texto del campo txtCorreo

    if (email.isEmpty()) {
        mensaje("ERROR: El campo correo está vacío.");
        return;
    }

    try {
        // Intentamos buscar al usuario en la base de datos usando el email
        ResultSet rs = bd.buscarUsuarioPorCorreo(email); // Método de búsqueda de la base de datos

        if (rs.next()) {
            // Si encontramos al usuario, mostramos sus datos en el área de texto
            String nombre = rs.getString("nombre");
            String correo = rs.getString("correo");
            String tipoUsuario = rs.getString("tipo_usuario");

            // Mostrar los datos del usuario en el área de texto
            jTextArea1.setText("Nombre: " + nombre + "\nCorreo: " + correo + "\nTipo de Usuario: " + tipoUsuario);
        } else {
            mensaje("No se encontró ningún usuario con ese correo.");
        }
    } catch (SQLException ex) {
        mensaje("ERROR: Ocurrió un problema al buscar el usuario.");
        Logger.getLogger(VentanaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
         String nombre = txtNombre.getText();
    //String direcciontxtCorreo.setText("");
    //String telefono txtContr.setText("");
    String email = txtCorreo.getText();
    String puesto = txtTipoUsuario;

    if (nombre.isEmpty() || email.isEmpty() || puesto.isEmpty()) {
        mensaje("ERROR: Campos vacíos");
        return;
    }

    try {
        // Registrar empleado en la base de datos
        if (bd.insertarEmpleado(new Empleado(0, nombre, "", "", email, puesto))) {
            mensaje("Empleado registrado exitosamente");
            limpiarCampos();
        } else {
            mensaje("Error al registrar el empleado");
        }
    } catch (Exception e) {
        mensaje("ERROR: Ocurrió un problema al registrar el empleado");
    }

        
    }//GEN-LAST:event_btnAgregarActionPerformed
   private void limpiarCampos() {
        txtNombre.setText("");
        txtCorreo.setText("");
        txtContr.setText("");
        txtUsuario.setText("");
    }
   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtActualizar;
    private javax.swing.JTextField txtAgregar;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtEliminar;
    // End of variables declaration//GEN-END:variables
}
