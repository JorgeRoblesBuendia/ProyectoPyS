import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VentanaProveedor extends javax.swing.JFrame {
    BaseDatos bd;
    boolean permisoEditar=false,permisoBorrar=false;
    public VentanaProveedor() {
        initComponents();
        jMenuItem_Servicios.setText("<html><center>Reporte<br>de ventas</center></html>");
        setLocationRelativeTo(null);

        bd = new BaseDatos();
        String correoActual = VentanaLogin.correoUsuario;
        System.out.println("Correo obtenido: " + correoActual);
        JLabelCorreoMostrar.setText(VentanaLogin.correoUsuario);
        
        try {
            if (bd.conexion.isClosed()) {
                System.out.println("Noo!!!. Se cerro");
            }
        } catch (SQLException ex) {
            Logger.getLogger(VentanaProveedor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actualizarTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        comboOrdenar = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnActualizar1 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();
        JLabelCorreoMostrar = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem_Servicios = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proveedores");
        setBackground(new java.awt.Color(204, 204, 255));
        setPreferredSize(new java.awt.Dimension(860, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(860, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GESTION PROVEEDORES");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 860, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("GERENTE");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(775, 0, 70, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Telefono", "Correo", "Direccion"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(204, 255, 153));
        jTable1.setSelectionBackground(new java.awt.Color(0, 0, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 470, 280));

        comboOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ordenar A-Z", "Ordenar Z-A" }));
        comboOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOrdenarActionPerformed(evt);
            }
        });
        jPanel2.add(comboOrdenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 490, 310));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Direccion:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 70, -1));

        txtDireccion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel3.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 210, -1));

        txtCorreo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel3.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 210, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Correo:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 70, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Telefono:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 80, -1));

        txtTelefono.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel3.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 210, -1));

        txtNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel3.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 210, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Nombre:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 40, 70, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 320, 310));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAgregar.setBackground(new java.awt.Color(204, 0, 0));
        btnAgregar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel4.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 130, -1));

        btnBuscar.setBackground(new java.awt.Color(204, 0, 0));
        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel4.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 110, -1));

        btnActualizar1.setBackground(new java.awt.Color(204, 0, 0));
        btnActualizar1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnActualizar1.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sync.png"))); // NOI18N
        btnActualizar1.setText("Actualizar");
        btnActualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizar1ActionPerformed(evt);
            }
        });
        jPanel4.add(btnActualizar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(204, 51, 0));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 140, -1));

        btnRefrescar.setBackground(new java.awt.Color(204, 51, 0));
        btnRefrescar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefrescar.setForeground(new java.awt.Color(255, 255, 255));
        btnRefrescar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh-data.png"))); // NOI18N
        btnRefrescar.setText("Refrescar");
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });
        jPanel4.add(btnRefrescar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 130, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 820, 50));

        JLabelCorreoMostrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JLabelCorreoMostrar.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(JLabelCorreoMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 24, 210, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 3, 880, -1));

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/2849812_menu_multimedia_bars_media_icon.png"))); // NOI18N
        jMenu3.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/353416_home_icon.png"))); // NOI18N
        jMenuItem1.setText("Regresar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cliente.png"))); // NOI18N
        jMenuItem2.setText("Empleados");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/categorias.png"))); // NOI18N
        jMenuItem3.setText("Categorias");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/inventory.png"))); // NOI18N
        jMenuItem4.setText("Inventario");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/producto.png"))); // NOI18N
        jMenuItem5.setText("Almacen");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem_Servicios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sales.png"))); // NOI18N
        jMenuItem_Servicios.setText("Reporte");
        jMenuItem_Servicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ServiciosActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem_Servicios);

        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
   DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    boolean encontrado = false;

    // Obtener los valores ingresados en los campos de texto
    String nombre = txtNombre.getText().trim();
    String telefono = txtTelefono.getText().trim();
    String correo = txtCorreo.getText().trim();
    String direccion = txtDireccion.getText().trim();

    // Validar campo obligatorio: nombre
    if (nombre.isEmpty()) {
        txtNombre.setBackground(new java.awt.Color(255, 102, 102)); // Rojo claro
        JOptionPane.showMessageDialog(this, "Por favor, ingresa el nombre del proveedor para buscar.");

        // Restaurar color después de 3 segundos
        new javax.swing.Timer(3000, e -> {
            txtNombre.setBackground(java.awt.Color.WHITE);
        }).start();

        return;
    }

    // Recorrer la tabla fila por fila
    for (int i = 0; i < modelo.getRowCount(); i++) {
        String valorNombre = modelo.getValueAt(i, 0).toString().trim();
        String valorTelefono = modelo.getValueAt(i, 1).toString().trim();
        String valorCorreo = modelo.getValueAt(i, 2).toString().trim();
        String valorDireccion = modelo.getValueAt(i, 3).toString().trim();

        // Verificar si hay coincidencia exacta
        if ((nombre.isEmpty() || valorNombre.equalsIgnoreCase(nombre)) &&
            (telefono.isEmpty() || valorTelefono.equals(telefono)) &&
            (correo.isEmpty() || valorCorreo.equalsIgnoreCase(correo)) &&
            (direccion.isEmpty() || valorDireccion.equalsIgnoreCase(direccion))) {
                
            encontrado = true;
            break; // Si encuentra una coincidencia, salimos del bucle
        }
    }

    // Mostrar mensaje según el resultado
    if (encontrado) {
        Proveedores p = new Proveedores(0, "", "", "", "", "");
        if (bd.buscarProveedor(correo) != -1) {
            p = bd.buscarProveedor(nombre, p);
            txtNombre.setText(p.nombre);
            txtTelefono.setText(p.telefono);
            txtCorreo.setText(p.email);
            txtDireccion.setText(p.direccion);
            permisoEditar = true;
            permisoBorrar = true;
        } else {
            System.out.println("EL REGISTRO YA EXISTE");
        }
        JOptionPane.showMessageDialog(this, "El proveedor SÍ se encuentra en la lista.", "Búsqueda", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "No se encontraron coincidencias.", "Búsqueda", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    if(JOptionPane.showConfirmDialog(this, "¿seguro de que quieres borrar este proveedor?")==0){      
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        // Obtener el índice de la fila seleccionada 
        int filaSeleccionada = jTable1.getSelectedRow();

        // Verificar si se seleccionó una fila
        if (filaSeleccionada >= 0) {
            modelo.removeRow(filaSeleccionada); // Eliminar la fila
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar");
        } 
    
    
        System.out.println("seco");
        bd.eliminarProveedor(txtCorreo.getText());permisoBorrar=false;//actualizarTabla();
        
    }
     
        /*if(permisoBorrar){
            bd.eliminarProveedor(txtCorreo.getText());
        }*/
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizar1ActionPerformed
   String nombre = txtNombre.getText().trim();
    String telefono = txtTelefono.getText().trim();
    String correo = txtCorreo.getText().trim();
    String direccion = txtDireccion.getText().trim();

    boolean error = false;

    // Resetear colores
    txtNombre.setBackground(java.awt.Color.WHITE);
    txtTelefono.setBackground(java.awt.Color.WHITE);
    txtCorreo.setBackground(java.awt.Color.WHITE);

    // Validación de campos vacíos y formato
    if (nombre.isEmpty()) {
        txtNombre.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }
    if (telefono.isEmpty() || !telefono.matches("^\\d{10}$")) {
        txtTelefono.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }
    if (correo.isEmpty()) {
        txtCorreo.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }

    if (error) {
        JOptionPane.showMessageDialog(this, "Por favor completa correctamente los campos obligatorios.\n- Teléfono debe tener 10 dígitos.", "Error", JOptionPane.ERROR_MESSAGE);

        // Restaurar colores tras 3 segundos
        new javax.swing.Timer(3000, e -> {
            txtNombre.setBackground(java.awt.Color.WHITE);
            txtTelefono.setBackground(java.awt.Color.WHITE);
            txtCorreo.setBackground(java.awt.Color.WHITE);
        }).start();
        return;
    }

    int id = bd.buscarProveedor(correo);
    bd.actualizarProveedor(new Proveedores(id, nombre, "", telefono, direccion, correo), id);

    permisoEditar = false;
    JOptionPane.showMessageDialog(this, "Proveedor actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnActualizar1ActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
     // Limpiar colores
    txtNombre.setBackground(java.awt.Color.WHITE);
    txtTelefono.setBackground(java.awt.Color.WHITE);
    txtCorreo.setBackground(java.awt.Color.WHITE);
    txtDireccion.setBackground(java.awt.Color.WHITE);

    // Obtener valores
    String nombre = txtNombre.getText().trim();
    String telefono = txtTelefono.getText().trim();
    String correo = txtCorreo.getText().trim();
    String direccion = txtDireccion.getText().trim();

    boolean error = false;

    // Validación de campos vacíos
    if (nombre.isEmpty()) {
        txtNombre.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }
    if (telefono.isEmpty()) {
        txtTelefono.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }
    if (correo.isEmpty()) {
        txtCorreo.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }
    if (direccion.isEmpty()) {
        txtDireccion.setBackground(new java.awt.Color(255, 102, 102));
        error = true;
    }

    if (error) {
        JOptionPane.showMessageDialog(this, "Por favor completa todos los campos obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
        new javax.swing.Timer(3000, e -> {
            txtNombre.setBackground(java.awt.Color.WHITE);
            txtTelefono.setBackground(java.awt.Color.WHITE);
            txtCorreo.setBackground(java.awt.Color.WHITE);
            txtDireccion.setBackground(java.awt.Color.WHITE);
        }).start();
        return;
    }

    // Validaciones específicas
    if (!nombre.matches("^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+$")) {
        JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras y espacios.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (!telefono.matches("^[0-9]{10}$")) {
        JOptionPane.showMessageDialog(this, "El teléfono debe contener exactamente 10 números.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (!correo.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
        JOptionPane.showMessageDialog(this, "Ingrese un correo electrónico válido.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (!direccion.matches("^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑ ,.]+$")) {
        JOptionPane.showMessageDialog(this, "La dirección solo puede contener letras, números, comas y puntos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verificar si el correo ya está en la base de datos
    if (bd.buscarProveedor(correo) != -1) {
        JOptionPane.showMessageDialog(this, "Este proveedor ya está registrado con ese correo.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Insertar en base de datos
    bd.insertarProveedor(new Proveedores(0, nombre, "", telefono, direccion, correo));

    // Agregar a tabla visual
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    modelo.addRow(new Object[]{nombre, telefono, correo, direccion});

    // Limpiar campos
    txtNombre.setText("");
    txtTelefono.setText("");
    txtCorreo.setText("");
    txtDireccion.setText("");

    JOptionPane.showMessageDialog(this, "Proveedor agregado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int filaSeleccionada = jTable1.getSelectedRow();
    
    if (filaSeleccionada >= 0) {
        txtNombre.setText(jTable1.getValueAt(filaSeleccionada, 0).toString());
        txtTelefono.setText(jTable1.getValueAt(filaSeleccionada, 1).toString());
        txtCorreo.setText(jTable1.getValueAt(filaSeleccionada, 2).toString());
        txtDireccion.setText(jTable1.getValueAt(filaSeleccionada, 3).toString());
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
               // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Regresando al menú principal...");

        VentanaMenu v=new VentanaMenu();
        v.bd=bd;
        v.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Regresando al menú principal...");

        VentanaGestionCategoria v=new VentanaGestionCategoria();
        v.bd=bd;
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Regresando al menú principal...");

        Inventario v=new Inventario();
        v.bd=bd;
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Regresando al menú principal...");

        VetnanaGestionUsuarios v=new VetnanaGestionUsuarios();
        v.bd=bd;
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Regresando al menú principal...");

        Almacen v=new Almacen();
        v.bd=bd;
        v.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem_ServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ServiciosActionPerformed
        // TODO add your handling code here:
        VentanaGanancias v=new VentanaGanancias();
        v.bd=bd;
        v.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem_ServiciosActionPerformed

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        limpiarCampos(); // Limpia los campos de texto
        actualizarTabla(); // Actualiza la tabla con los datos actuales
        JOptionPane.showMessageDialog(this, "Tabla actualizada.");
    }//GEN-LAST:event_btnRefrescarActionPerformed

    private void comboOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOrdenarActionPerformed
        actualizarTabla(); // Llama a tu método para que aplique la lógica de ordenación
    }//GEN-LAST:event_comboOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */
    
   public void actualizarTabla() {
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    ArrayList<String[]> datos = bd.mostrarProveedores();
    
    if (datos.size() == 0) return;

    // Obtener el valor seleccionado en el combo box
    String orden = (String) comboOrdenar.getSelectedItem();

    // Ordenar los datos según la opción seleccionada
    if (orden != null) {
        if (orden.equals("Ordenar Z-A")) {
            datos.sort((a, b) -> b[0].compareToIgnoreCase(a[0])); // Descendente
        } else if (orden.equals("Ordenar A-Z")) {
            datos.sort((a, b) -> a[0].compareToIgnoreCase(b[0])); // Ascendente
        }
    }

    // Limpiar la tabla antes de llenarla de nuevo
    int totalRenglones = modelo.getRowCount();
    for (int i = 0; i < totalRenglones; i++) {
        modelo.removeRow(0);
    }

    // Agregar los datos ordenados a la tabla
    for (String[] fila : datos) {
        modelo.addRow(fila);
    }
}


    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaProveedor().setVisible(true);
            }
        });
    }
    private void limpiarCampos() {
        txtNombre.setText("");
        txtCorreo.setText("");
        txtTelefono.setText("");
        txtDireccion.setText("");
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelCorreoMostrar;
    private javax.swing.JButton btnActualizar1;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JComboBox<String> comboOrdenar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem_Servicios;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
